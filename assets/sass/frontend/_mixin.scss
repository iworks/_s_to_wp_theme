/**
 * Images version, increase it when you change any background image.
 */
$version: "THEME_VERSION.BUILDTIMESTAMP";
$au: 1.618;

$width: 100%;

$width_xsx: 320px;
$width_xs:  400px;
$width_s:   600px;
$width_m:   782px;
$width_l:   901px;
$width_x:  1200px;
$width_xl: 1600px;

$default_width: $width_x;

/**
 * Images
 */

$default_image_size: calc( 100% * 9 / 16 );

$image_root: 'assets/images/';

@mixin image( $image ) {
    image: url(#{$image_root}#{$image}?v=#{$version});
}

@mixin icon( $image ) {
    @include image( 'icons/#{$image}' );
}

@mixin iconb( $image ) {
    background: {
        repeat: no-repeat;
        position: 50% 50%;
        size: contain;
        @include icon(#{$image});
    }
}

@function iurlb( $image ) {
    @return iurl( backgrounds/#{$image} );
}

@mixin bg( $image ) {
    @include image( 'backgrounds/#{$image}' );
}

@mixin default_width() {
    margin: {
        left: auto;
        right: auto;
    }
    max-width: $default_width;
    @media print {
        max-width: 100%;
    }
    @media screen and ( max-width: #{ $width_x + 1px } ) {
        margin: {
            left: var(--padding-xsmall);
            right: var(--padding-xsmall);
        }
    }
}

@mixin boxsizing {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

@mixin transition( $trans ) {
    -webkit-transition: $trans;
    -moz-transition: $trans;
    -ms-transition: $trans;
    -o-transition: $trans;
    transition: $trans;
}

@mixin column($col) {
    width: $width/12*$col;
}

@mixin radius( $radius: var(--radius-default) ) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}
@mixin boxshadow($shadow) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

@mixin textshadow( $shadow ) {
    text-shadow: $shadow;
    -webkit-text-shadow: $shadow;
    -moz-text-shadow: $shadow;
}

@mixin clearfix {
    &:before,
    &:after {
        content: '';
        display: block;
        clear: both;
    }
}

@mixin hide {
    opacity: 0;
    @include transition(opacity 0.4s);
}

@mixin show {
    opacity: 1;
    @include transition(opactiy 0.4s);
}

@mixin columns($columns) {
    -webkit-columns: $columns;
    -moz-columns: $columns;
    columns: $columns;
}

@mixin reset_min() {
    margin: 0;
    outline: 0;
    padding: 0;
    border: 0;
}

@mixin reset_ul() {
    @include reset_min;
    list-style: none;
}

@mixin reset() {
    @include reset_min;
    background: transparent none;
    bottom: auto;
    color: inherit;
    display: inline;
    font: {
        size: 100%;
        family: 'Open Sans', sans-serif;
        style: normal;
        weight: 200;
    }
    left: auto;
    line-height: $au;
    list-style: none;
    position: static;
    right: auto;
    top: auto;
    @include boxshadow( none );
    @include radius( 0 );
    width: unset;
    height: unset;
    text-indent: unset;
}

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

@mixin block_absolute() {
    bottom: 0;
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%;
}

@mixin random_border_color() {
    border: 1px solid rgb(random(255),random(255),random(255));
}

@mixin link() {
    text-decoration: none;
    color: var(--color-link);
    &:visited {
        color: var(--color-link-visited);
    }
    &:hover {
        color: var(--color-link-hover);
    }
    &:active {
        color: var(--color-link-active);
    }
}

/**
 * fonts
 */

@mixin font( $size, $line: au ) {
    font-size: #{$size}px;
    @if $size == $line {
        line-height: 1;
    } @else {
        @if au == $line {
            $line: $size * $au;
        }
        line-height: #{$line}px;
    }
}

@mixin button_shape() {
    display: inline-block;
    @include link;
    @include font( 16, 18 );
    padding: 10px 50px;
    font-weight: 500;
    @include radius;
    border: {
        width: 2px;
        style: solid;
    }
    background-repeat: no-repeat;
    &:hover {
        cursor: pointer;
        text-decoration: none;
    }
}

@mixin button() {
    @include button_shape;
    border-color: var(--button-border-color);
    background-color: var(--button-background);
    color: var(--button-color);
    &:visited {
        color: var(--button-color);
    }
    &:hover {
        background-color: var(--button-background-hover);
        border-color: var(--button-border-color-hover);
        color: var(--button-color);
    }

}

@mixin button_reverse() {
    @include button_shape;
    color: var(--button-background);
    background-color: var(--button-color);
    border-color: var(--button-background);
    &:visited {
        color: var(--button-background);
    }
    &:hover {
        color: var(--button-background);
        background-color: var(--button-reverse-background-hover);
    }
}

@mixin button_before_image() {
    &:before {
        display: block;
        display: inline-block;
        width: 27px;
        height: 17px;
        content: "";
        background: {
            repeat: no-repeat;
            position: 0 center;
            size: 14px auto;
        }
    }
}

@mixin grid( $columns: 1 ) {
    display: grid;
    column-gap: padding_clamp();
    grid-template-columns: repeat( #{ $columns }, 1fr );
}

@mixin a_color_primary() {
    a {
        color: var(--color-primary);
        text-decoration: none;
        border-bottom: 1px solid transparent;
        &:focus {
            border-bottom: 1px dashed var(--color-primary);
        }
    }
}

@mixin background_gradient( $color1: var(--color-white), $color2: $color_accent ) {
    background: transparent linear-gradient(90deg, $color1 0%, $color2 17%, $color2 83%, $color1 100%) 0% 0% no-repeat padding-box;
}

@function padding_clamp() {
    @return clamp( var(--padding-xsmall), 2.5vw, var(--padding-default) );
}
